#
#   UVOT Grism wavelcal data (original version in files)
#
#  History: the original wavelength calibration used ASCII files to define the 
#           line identifications for each observation (pixel, wavelength). 
#           A new anchor position calibration will require a single shift factor
#           for each set.
#
__version__ = '28-Nov-2012'

import numpy as np

'''
 ===========================================================================
 anchor distortion to wheelpos = 160 using zemax flux calc. unscaled zemax 
  (but xf,yf inputs were adjusted)  Jan 1, 2013
 ===========================================================================

Used P041C and P177D for extra points. Had to use required wavelength 
shift + projection to track to derive anchor_obs. See spreadsheet. 

line = []
for i in range(31): line.append(t[i][0].split(',') )
xf = [];yf=[];xobs=[];yobs=[];xank=[];yank=[];dx=[];dy=[]
for i in range(31): xf.append(line[i][10])
for i in range(31): yf.append(line[i][11])
for i in range(31): xobs.append(line[i][16])
for i in range(31): yobs.append(line[i][17])
for i in range(31): xank.append(line[i][18])
for i in range(31): yank.append(line[i][19])
for i in range(31): dx.append(line[i][20])
for i in range(31): dy.append(line[i][21])
xf = array(xf,dtype=float); yf = array(xf,dtype=float); xobs=array(xobs,dtype=float);yobs=array(yobs,dtype=float)
xank=array(xank,dtype=float);yank=array(yank,dtype=float);dx=array(dx,dtype=float);dy=array(dy,dtype=float)

Then, tried cubic fit. Does not work, overshoots.

Linear, ignored points # 2,6,8 (see below)

In [308]: dx_tck11
Out[308]: 
[array([-0.17      , -0.17      ,  0.04951407,  0.17      ,  0.17      ]),
 array([-0.17      , -0.17      ,  0.01522316,  0.17      ,  0.17      ]),
 array([ 35.66269052,  15.35569526, -10.76921182,  -6.48048269,
       -14.83608222, -10.2367389 , -47.8418606 , -23.81023774, -97.94333179]),
 1,
 1]

In [309]: dy_tck11
Out[309]: 
[array([-0.17      , -0.17      ,  0.02093872,  0.17      ,  0.17      ]),
 array([-0.17      , -0.17      , -0.00578249,  0.17      ,  0.17      ]),
 array([ 19.61863629,  12.76474213, -25.6693856 ,  19.69102999,
         2.50526653, -26.67619325,  60.96640544, -20.01926589, -20.7160876 ]),
 1,
 1]

quadratic: (ignore point # 2,6,8

In [306]: dx_tck22
Out[306]: 
[array([-0.17      , -0.17      , -0.17      ,  0.03095215,  0.17      ,
        0.17      ,  0.17      ]),
 array([-0.17      , -0.17      , -0.17      ,  0.02966182,  0.17      ,
        0.17      ,  0.17      ]),
 array([ 190.2924066 ,  -76.7187735 ,   76.11834747, -221.61099165,
        -57.21449928,   67.77965624,  -50.49307075,  113.70633559,
         56.78117527,  -86.92571534,   32.37709143, -149.53787718,
          2.76956534,   27.89624015,  -86.94850729,  -37.54794618]),
 2,
 2]

In [307]: dy_tck22
Out[307]: 
[array([-0.17      , -0.17      , -0.17      , -0.00046486,  0.17      ,
        0.17      ,  0.17      ]),
 array([-0.17      , -0.17      , -0.17      ,  0.01364477,  0.17      ,
        0.17      ,  0.17      ]),
 array([-445.61987808,  147.23943864,  -69.78251834,  131.05723488,
        150.13797616,  -28.07748551,   16.00560357,  -83.6562297 ,
        -71.73970418,   36.83833355,  -24.91430916,    5.07269946,
        310.08195738,  -48.19866741,  -14.34992802,  -56.32330902]),
 2,
 2]

In [183]: for i in range(31): 
print "%2i (%7.4f, %7.4f) - (%5.1f, %5.1f) - (%5.1f,%5.1f)"%
(i,xf[i],yf[i],dxfit[i],dyfit[i],dxfit[i]-dx[i],dyfit[i]-dy[i]) 
   .....: 
 i    xf       yf (mm)-  dxfit  dyfit  -   Ddx    Ddy  (pix)
 0 ( 0.0310, -0.0253) - (-19.0,   7.2) - (  4.7, -2.5)
 1 (-0.0023,  0.0028) - (  0.2,   4.5) - ( -5.9, -4.4)
 2 ( 0.0126, -0.0051) - ( 19.4,   2.5) - (-28.1, -0.7)  *
 3 (-0.0033,  0.0010) - ( -4.5,   3.2) - ( -0.9, -3.0)
 4 ( 0.0065,  0.0021) - ( -7.3,  -1.5) - ( -0.1,  2.3)
 5 (-0.0047,  0.0019) - ( -4.8,   1.8) - ( -0.4, -1.8)
 6 (-0.1174, -0.0718) - (-18.9,   5.1) - ( 32.9, -3.6)  *
 7 (-0.0636, -0.1203) - ( 14.4,  17.3) - ( -1.4, -0.9)
 8 ( 0.0068, -0.1683) - ( 28.5,  14.7) - (-30.1, 15.8)  *
 9 ( 0.0435, -0.1247) - ( -3.0,  15.0) - (  1.2, -1.7)
10 ( 0.0938, -0.0692) - (-19.6,  13.0) - (  0.2,  0.6)
11 ( 0.1329, -0.0112) - (-23.3, -13.1) - ( -0.5, -0.6)
12 (-0.0969,  0.0610) - (  2.1,  -4.5) - (  0.1,  1.1)
13 (-0.0623,  0.1027) - ( -5.6, -12.8) - ( -0.1, -0.7)
14 (-0.0271,  0.0205) - ( -0.7,  -7.2) - ( -3.0,  6.4)
15 (-0.0194, -0.0289) - ( -0.5,   0.0) - (  0.3,  2.4)
16 ( 0.0404, -0.0218) - (-16.0,   3.1) - ( -1.3,  1.1)
17 ( 0.0210,  0.0226) - (-11.9,   3.5) - (  1.8, -4.6)
18 (-0.0976, -0.0204) - (  5.5,  14.3) - ( -1.6, -0.8)
19 (-0.0154, -0.0770) - ( -5.2,  14.2) - (  5.6, -1.3)
20 (-0.0156,  0.0653) - (-11.4,  -6.5) - (  2.6,  0.5)
21 ( 0.0546,  0.0891) - (-20.6, -10.5) - (  6.0, -2.2)
22 ( 0.0647,  0.0341) - (-13.2, -11.5) - ( -0.3,  5.4)
23 ( 0.1282,  0.0367) - (-28.9, -15.6) - (  1.2, -1.0)
24 (-0.0733, -0.0705) - (  7.9,   7.3) - (  2.3,  1.9)
25 ( 0.0043, -0.1160) - ( -0.2,  18.2) - ( -3.0,  1.1)
26 ( 0.0378, -0.0753) - (-10.9,   6.8) - ( -2.3,  2.9)
27 ( 0.0044,  0.1281) - ( -9.3, -22.5) - ( -0.8,  0.5)
28 (-0.0785,  0.0229) - (  0.0,   4.6) - (  1.2, -1.9)
29 ( 0.1091,  0.1150) - (-44.6, -20.4) - (  0.9, -0.0)
30 ( 0.0785,  0.0881) - (-12.8, -15.6) - ( -6.7,  1.2)

  * = point ignored in fit since it is so discordant 
  
As function of the observed anchor point, we get:
In [325]:  interpolate.bisplrep(xobs[q],yobs[q],dx[q],xb=-50,xe=2100,yb=-50,ye=1900,kx=2,ky=2)
   .....: 
Warning:     The required storage space exceeds the available storage space.
    Probably causes: nxest or nyest too small or s is too small. (fp>s)
        kx,ky=2,2 nx,ny=7,7 m=28 fp=241.480766 s=20.516685
Out[325]: 
[array([  -50.        ,   -50.        ,   -50.        ,  1223.49126478,
        2100.        ,  2100.        ,  2100.        ]),
 array([  -50.        ,   -50.        ,   -50.        ,  1126.86855584,
        1900.        ,  1900.        ,  1900.        ]),
 array([ 161.95076371,  -78.89912033,   76.56623909, -176.42777675,
        -42.54958083,   66.36035772,  -46.62329962,   82.7023882 ,
         39.93029571,  -87.67033295,   29.18443101, -112.12711925,
         45.07270813,   25.8779904 ,  -84.1278129 ,  -42.65666229]),
 2,
 2]

In [326]:  interpolate.bisplrep(xobs[q],yobs[q],dy[q],xb=-50,xe=2100,yb=-50,ye=1900,kx=2,ky=2)
   .....: 
Warning:     The required storage space exceeds the available storage space.
    Probably causes: nxest or nyest too small or s is too small. (fp>s)
        kx,ky=2,2 nx,ny=7,7 m=28 fp=182.140686 s=20.516685
Out[326]: 
[array([  -50.        ,   -50.        ,   -50.        ,  1021.54170247,
        2100.        ,  2100.        ,  2100.        ]),
 array([  -50.        ,   -50.        ,   -50.        ,  1023.83018478,
        1900.        ,  1900.        ,  1900.        ]),
 array([-388.70677938,  153.37701596,  -70.26913226,  125.97729059,
        127.48396157,  -28.20009961,   15.83861805,  -72.1504286 ,
        -60.00561045,   35.30521939,  -22.16711781,    3.53266776,
        287.86613624,  -49.73984126,  -15.55817971,  -53.68367463]),
 2,
 2]

The fit is not good. There are not enough data points, but we will use this 
for the second version of the wavecal (160)
=================================================================================
'''  
# No   ID      OBSID      ext    imgid(lent1)    imgid(gr)       imgid(lent2), dateobs,    xlen,    ylen,    xfield,         yfield,        xobs ,      yobs ,    xank ,    yank ,   dx  ,     dy,   
# 0    1       2          3      4               5               6             7           8        9        10              11             12          13        14        15       16        17
anchor_160_1 = [
['34',  'WR4', '56900001', '1', ''            , 'gu248231372I', 'w1248231822I', '081113', '1176.6', '862.9', '0.030951671' , '-0.025344298', '1198.6', '790.3' , '1321.6', '861.1' , '-19.0', '7.2',  ],
['35',  'WR4', '56900002', '1', ''            , 'gu248232264I', 'w1248232685I', '081113', '938.4' , '1065' , '-0.002261114', '0.002833485' , '1011.3', '965.9' , '1115.1', '1039.4', '0.2'  , '4.5',  ],
['36',  'WR4', '56900003', '1', ''            , 'gu250065349I', 'w1250065300I', '081204', '1045'  , '1008.4', '0.01260435' , '-0.005062527', '1122'  , '915.3' , '1206.6', '990.8' , '19.4' , '2.5',  ],
['37',  'WR4', '56900004', '1', ''            , 'gu250065853I', 'w1250065803I', '081204', '930.9' , '1051.6', '-0.00331249', '0.000971144' , '999.7' , '952.6' , '1108.2', '1027.4', '-4.5' , '3.2',  ],
['51', 'WR52', '56950004', '1', ''            , 'gu230531544I', 'w2230532302I', '080422', '1077'  , '1137.2', '0.00652087' , '0.0021281'   , '1058.3', '956.9' , '1169.6', '1036.4', '-7.3' , '-1.5', ],
['52', 'WR86', '57000002', '1', ''            , 'gu230487624I', 'w2230488109I', '080421', '919.8' , '1058.4', '-0.00465491', '0.001880401' , '991.3' , '956.8' , '1100.1', '1033.0', '-4.8' , '1.8',  ],
['72', 'WR52', '57901001', '1', 'w1256729765E', 'gu256729814I', 'w1256730256E', '090219', '189.9' , '592.4' , '-0.11737787', '-0.071786576', '308.7' , '466.1' , '431.6' , '539.0' , '-18.9', '5.1',  ],
['73', 'WR52', '57902001', '1', 'w1256734981E', 'gu256735030I', 'w1256735472E', '090219', '575.4' , '258.8' , '-0.06361168', '-0.120316445', '631.3' , '169.2' , '720.9' , '229.9' , '14.4' , '17.3', ],
['74', 'WR52', '57903001', '1', 'w1256735524E', 'gu256735573I', 'w1256736015E', '090219', '1080.2', '-85'   , '0.006774644', '-0.1682647'  , '1084'  , '7'     , '1159.5', '70.3'  , '28.5' , '14.7', ],
['75', 'WR52', '57904001', '1', 'w1256740741E', 'gu256740791I', 'w1256741233E', '090219', '1343.2', '227.2' , '0.04345243' , '-0.1247226'  , '1289'  , '145.5' , '1396.0', '208.5' , '-3.0' , '15.0', ],
['76', 'WR52', '57905001', '1', 'w1256741284E', 'gu256741333I', 'w1256741775E', '090219', '1704.0', '625.2' , '0.093755556' , '-0.06923418', '1599.7', '512.8' , '1723.3', '577.8' , '-19.6', '13.0', ],
['77', 'WR52', '57906001', '1', 'w1256741824E', 'gu256741875I', 'w1256742317E', '090219', '1990.3', '1025.4', '0.132909423' , '-0.01123406', '1854.2', '871.4' , '1981.5', '962.5' , '-23.3', '-13.1',],
['79', 'WR52', '57908001', '1', 'w1256746510E', 'gu256746559I', 'w1256747001E', '090219', '337.0' , '1558.8', '-0.096855899', '0.06095789' , '446.7' , '1305.6', '548.6' , '1388.1', '2.1'  , '-4.5', ],
['80', 'WR52', '57909001', '1', 'w1256752270E', 'gu256752319I', 'w1256752760E', '090219', '584.7' , '1858.0', '-0.062319254', '0.10267212' , '658.1' , '1568.5', '767.7' , '1659.3', '-5.6' , '-12.8',],
['81', 'WR52', '57911001', '1', 'w1256747044E', 'gu256747093I', 'w1256747535E', '090219', '843.9' , '1255.2', '-0.027097532', '0.0205269'  , '859.9' , '1062.3', '964.6' , '1147.5', '-0.7' , '-7.2', ],
['82', 'WR52', '57912001', '1', 'w1256747585E', 'gu256747634I', 'w1256748076E', '090219', '898.6' , '903.7' , '-0.01938979' , '-0.0289002' , '901'   , '752.9' , '1005.5', '830.9' , '-0.5' , '0.0',  ],
['83', 'WR52', '57913001', '1', 'w1256748124E', 'gu256748173I', 'w1256748615E', '090219', '1321.2', '965.4' , '0.040383295' , '-0.0217905' , '1262.3', '810.2' , '1382.3', '885.1' , '-16.0', '3.1',  ],
['84', 'WR52', '57914001', '1', 'w1256752805E', 'gu256752854I', 'w1256753297E', '090219', '1182.3', '1283.6', '0.02101974'  , '0.0225741'  , '1147.8', '1094.5', '1263.7', '1169.0', '-11.9', '3.5',  ],
['85', 'WR52', '57915001', '1', 'w1256753344E', 'gu256753393I', 'w1256753835E', '090219', '331.4' , '975.6' , '-0.09764087' , '-0.02036581', '428.8' , '808.2' , '527.3' , '871.9' , '5.5'  , '14.3', ],
['86', 'WR52', '57916001', '1', 'w1256753884E', 'gu256753933I', 'w1256754375E', '090219', '921.5' , '569.6' , '-0.01535908' , '-0.07698588', '917.1' , '455.3' , '1026.3', '519.1' , '-5.2' , '14.2', ],
['87', 'WR52', '57918001', '1', 'w1256759135E', 'gu256759184I', ''            , '090219', '919.6' , '1589.7', '-0.01561666' , '0.06526086' , '929.7' , '1349'  , '1045.1', '1433.5', '-11.4', '-6.5', ],
['88', 'WR52', '57919001', '1', 'w1256759644E', 'gu256759694I', 'w1256760135E', '090219', '1423.0', '1760.6', '0.054574404' , '0.08908184' , '1365.3', '1510.5', '1489.9', '1599.0', '-20.6', '-10.5',],
['89', 'WR52', '57920001', '1', 'w1256764385E', 'gu256764434I', 'w1256764876E', '090220', '1502.0', '1351.5', '0.064674394' , '0.034062064', '1427.3', '1158.7', '1544.5', '1248.2', '-13.2', '-11.5',],
['90', 'WR52', '57921001', '1', 'w1256763844E', 'gu256763893I', 'w1256764335E', '090220', '1950.8', '1384.8', '0.1281803'   , '0.03669537' , '1822.5', '1179.6', '1955.4', '1273.2', '-28.9', '-15.6',],
['91', 'WR52', '57922001', '1', 'w1256764924E', 'gu256764973I', 'w1256765415E', '090220', '509.5' , '603.2' , '-0.07330116' , '-0.0705438' , '571.9' , '482.3' , '668.0' , '553.0' , '7.9'  , '7.3',  ],
['92', 'WR52', '57923001', '1', 'w1256765464E', 'gu256765515I', 'w1256765956E', '090220', '1062.4', '289.8' , '0.004291641' , '-0.11599439', '1042'  , '204.4' , '1146.2', '264.2' , '-0.2' , '18.2', ],
['93', 'WR52', '57924001', '1', 'w1256769603E', 'gu256769652I', 'w1256770095E', '090220', '1302.7', '582.0' , '0.037805586' , '-0.07525515', '1247.6', '464.3' , '1362.5', '535.5' , '-10.9', '6.8',  ],
['94', 'WR52', '57925001', '1', 'w1256770145E', 'gu256770200I', 'w1256770691E', '090220', '1071.0', '2021.2', '0.004432894' , '0.128074195', '1070.9', '1733.6', '1184.2', '1834.1', '-9.3' , '-22.5',],
['95', 'WR52', '57926001', '1', 'w1256776767E', 'gu256776821I', 'w1256777314E', '090220', '468.8' , '1286.0', '-0.078483243', '0.022912308', '546.9' , '1078.4', '650.9' , '1151.8', '0.0'  , '4.6',  ],
['800','P041C','57955002', '1', '', '', '', '', '', '',                                                       '0.1091'      , '0.0115'     , '1695'  , '1672'  , '1843.6', '1770.4', '-44.6', '-20.4',],
['801','P177D','56762002', '5', '', '', '', '', '', '',                                                       '0.0785'      , '0.0881'     , '1525'  , '1503'  , '1641.8', '1596.6', '-12.8', '-15.6',],
]

'''   
Anchor positions adjustment to zemax model.  
Scale zemax.read_zmeax_flux(160) model. 
Anchors only:
  (Find anchors (260nm) using zemax.correctAnkPos(xank,yank,wheelpos=160). )
  (Plot flux at 260nm. )
Anchors+dispersion:  
   repeatedly call uvotcal.getZmx(xfield,yfield,160) -> dispersion, anchor, (unscaled xpix, ypix), angle
   


The wavelength calibration

The second version of the wavelength calibration will fit a linear function to the zemax model, 
rather than a simple scale factor to account for the drift of the mean wavelength due to the extended PSF

So redefine a dictionary wpixscale1 = {constant:S, linear: [B,A]} 

where S(xf,yf) is a fit with a constant, 
and A + B * (lambda - lambda_anchor) provides a fit with a linear function, 
where A(xf,yf), B(xf,yf).

For each of the spectra we have line identifications.

Method:
 * the anchor point correction has been inplemented in zemax.correctAnkPos()

run uvotcal.getFirstOrder(ra,dec,obsid,ext, wpixscale=1,test="flux") to extract an unscaled spectrum , get zemax dispersion
run ? to measure the lines indicated  
get scale factors (S,A,B), dlam offsets 
copy the measured line positions to cal1.py ? file? 
run wavAcc? 

=========
The previous approach did not work well. Second try:

A simple refitted zemax model was made for the uv clocked (160) by scaling positions with a typical scale factor of 0,973 
relative to the anchor point.  All points were scaled (i.e., also in the dispersion direction.) 

align_zemax, align_zemax_field, correctAnkPos, getZmx, were all modified to support the simple model, using keyword test="simple".

Using getFirstOrder now to update the *anchor positions* in order to get a better correctAnkPos. 

Comparing *normalised flux profiles* to the zemax model can now also be done by calling getFirstOrder.

'''
# No   ID      OBSID      ext    imgid(lent1)    imgid(gr)       imgid(lent2), dateobs,    xlen,    ylen,    xfield,         yfield,        xobs ,      yobs ,    xank ,    yank ,   dx  ,     dy,   
# 0    1       2          3      4               5               6             7           8        9        10              11             12          13        14        15       16        17
anchor_160_2 = [
['34',  'WR4', '56900001', '1', ''            , 'gu248231372I', 'w1248231822I', '081113', '1176.6', '862.9', '0.030951671' , '-0.025344298', '1198.6', '790.3' , '1317.2', '866.2' , '-14.6', '2.1',  ],
['35',  'WR4', '56900002', '1', ''            , 'gu248232264I', 'w1248232685I', '081113', '938.4' , '1065' , '-0.002261114', '0.002833485' , '1011.3', '965.9' , '1115.7', '1039.7', '-0.4' , '4.2',  ],
['36',  'WR4', '56900003', '1', ''            , 'gu250065349I', 'w1250065300I', '081204', '1045'  , '1008.4', '0.01260435' , '-0.005062527', '1122'  , '915.3' , '1205.9', '992.1' , '20.1' , '1.2',  ],
['37',  'WR4', '56900004', '1', ''            , 'gu250065853I', 'w1250065803I', '081204', '930.9' , '1051.6', '-0.00331249', '0.000971144' , '999.7' , '952.6' , '1109.0', '1027.9', '-5.3' , '2.7',  ],
['51', 'WR52', '56950004', '1', ''            , 'gu230531544I', 'w2230532302I', '080422', '1077'  , '1137.2', '0.00652087' , '0.0021281'   , '1058.3', '956.9' , '1169.4', '1036.5', '-7.1' , '-1.6', ],
['52', 'WR86', '57000002', '1', ''            , 'gu230487624I', 'w2230488109I', '080421', '919.8' , '1058.4', '-0.00465491', '0.001880401' , '991.3' , '956.8' , '1100.9', '1033.4', '-5.6' , '1.4',  ],
['72', 'WR52', '57901001', '1', 'w1256729765E', 'gu256729814I', 'w1256730256E', '090219', '189.9' , '592.4' , '-0.11737787', '-0.071786576', '308.7' , '466.1' , '415.9' , '552.5' , '-3.1' , '-8.4', ],
['73', 'WR52', '57902001', '1', 'w1256734981E', 'gu256735030I', 'w1256735472E', '090219', '575.4' , '258.8' , '-0.06361168', '-0.120316445', '631.3' , '169.2' , '731.3' , '251.4' , '4.0'  , '-4.2', ],
['74', 'WR52', '57903001', '1', 'w1256735524E', 'gu256735573I', 'w1256736015E', '090219', '1080.2', '-85'   , '0.006774644', '-0.1682647'  , '1084'  , '7'     , '1161.5', '-54.4' , '26.5' , '139.4',],
['75', 'WR52', '57904001', '1', 'w1256740741E', 'gu256740791I', 'w1256741233E', '090219', '1343.2', '227.2' , '0.04345243' , '-0.1247226'  , '1289'  , '145.5' , '1390.8', '230.0' ,  '2.2' , '-6.5', ],
['76', 'WR52', '57905001', '1', 'w1256741284E', 'gu256741333I', 'w1256741775E', '090219', '1704.0', '625.2' , '0.093755556' , '-0.06923418', '1599.7', '512.8' , '1709.7', '590.1' , '-6.0' , '0.7',  ],
['77', 'WR52', '57906001', '1', 'w1256741824E', 'gu256741875I', 'w1256742317E', '090219', '1990.3', '1025.4', '0.132909423' , '-0.01123406', '1854.2', '871.4' , '1962.6', '963.2' , '-4.4' , '-13.8',],
['79', 'WR52', '57908001', '1', 'w1256746510E', 'gu256746559I', 'w1256747001E', '090219', '337.0' , '1558.8', '-0.096855899', '0.06095789' , '446.7' , '1305.6', '562.2' , '1379.6', '-11.5', '4.0',  ],
['80', 'WR52', '57909001', '1', 'w1256752270E', 'gu256752319I', 'w1256752760E', '090219', '584.7' , '1858.0', '-0.062319254', '0.10267212' , '658.1' , '1568.5', '775.9' , '1642.5', '-13.8', '4.0',  ],
['81', 'WR52', '57911001', '1', 'w1256747044E', 'gu256747093I', 'w1256747535E', '090219', '843.9' , '1255.2', '-0.027097532', '0.0205269'  , '859.9' , '1062.3', '967.3' , '1146.3', '-3.4' , '-6.0', ],
['82', 'WR52', '57912001', '1', 'w1256747585E', 'gu256747634I', 'w1256748076E', '090219', '898.6' , '903.7' , '-0.01938979' , '-0.0289002' , '901'   , '752.9' , '1007.2', '837.9' , '-2.2' , '-7.0', ],
['83', 'WR52', '57913001', '1', 'w1256748124E', 'gu256748173I', 'w1256748615E', '090219', '1321.2', '965.4' , '0.040383295' , '-0.0217905' , '1262.3', '810.2' , '1376.2', '889.6' , '-9.9' , '-1.4', ],
['84', 'WR52', '57914001', '1', 'w1256752805E', 'gu256752854I', 'w1256753297E', '090219', '1182.3', '1283.6', '0.02101974'  , '0.0225741'  , '1147.8', '1094.5', '1261.4', '1166.5', '-9.6' , '6.0',  ],
['85', 'WR52', '57915001', '1', 'w1256753344E', 'gu256753393I', 'w1256753835E', '090219', '331.4' , '975.6' , '-0.09764087' , '-0.02036581', '428.8' , '808.2' , '539.7' , '878.4' , '-6.9' , '7.8',  ],
['86', 'WR52', '57916001', '1', 'w1256753884E', 'gu256753933I', 'w1256754375E', '090219', '921.5' , '569.6' , '-0.01535908' , '-0.07698588', '917.1' , '455.3' , '1027.4', '533.5' , '-6.3' , '-0.2', ],
['87', 'WR52', '57918001', '1', 'w1256759135E', 'gu256759184I', ''            , '090219', '919.6' , '1589.7', '-0.01561666' , '0.06526086' , '929.7' , '1349'  , '1045.2', '1425.3', '-11.5', '1.7',  ],
['88', 'WR52', '57919001', '1', 'w1256759644E', 'gu256759694I', 'w1256760135E', '090219', '1423.0', '1760.6', '0.054574404' , '0.08908184' , '1365.3', '1510.5', '1480.2', '1585.0', '-10.9', '3.5',  ],
['89', 'WR52', '57920001', '1', 'w1256764385E', 'gu256764434I', 'w1256764876E', '090220', '1502.0', '1351.5', '0.064674394' , '0.034062064', '1427.3', '1158.7', '1534.3', '1243.9', '-3.0' , '-7.2', ],
['90', 'WR52', '57921001', '1', 'w1256763844E', 'gu256763893I', 'w1256764335E', '090220', '1950.8', '1384.8', '0.1281803'   , '0.03669537' , '1822.5', '1179.6', '1936.4', '1266.9', '-9.9' , '-9.3', ],
['91', 'WR52', '57922001', '1', 'w1256764924E', 'gu256764973I', 'w1256765415E', '090220', '509.5' , '603.2' , '-0.07330116' , '-0.0705438' , '571.9' , '482.3' , '677.2' , '567.4' , '-1.3' , '-7.1', ],
['92', 'WR52', '57923001', '1', 'w1256765464E', 'gu256765515I', 'w1256765956E', '090220', '1062.4', '289.8' , '0.004291641' , '-0.11599439', '1042'  , '204.4' , '1146.5', '284.8' , '-0.5' , '-2.4', ],
['93', 'WR52', '57924001', '1', 'w1256769603E', 'gu256769652I', 'w1256770095E', '090220', '1302.7', '582.0' , '0.037805586' , '-0.07525515', '1247.6', '464.3' , '1356.5', '548.8' , '-4.9' , '-6.5', ],
['94', 'WR52', '57925001', '1', 'w1256770145E', 'gu256770200I', 'w1256770691E', '090220', '1071.0', '2021.2', '0.004432894' , '0.128074195', '1070.9', '1733.6', '1181.5', '1814.1', '-6.6' , '-2.5', ],
['95', 'WR52', '57926001', '1', 'w1256776767E', 'gu256776821I', 'w1256777314E', '090220', '468.8' , '1286.0', '-0.078483243', '0.022912308', '546.9' , '1078.4', '660.8' , '1150.9', '-9.9' , '5.5',  ],
['800','P041C','57955002', '1', '', '', '', '', '', '',                                                       '0.1091'      , '0.0115'     , '1695'  , '1672'  , '1826.7', '1751.1', '-27.7', '-1.1', ],
['801','P177D','56762002', '5', '', '', '', '', '', '',                                                       '0.0785'      , '0.0881'     , '1525'  , '1503'  , '1629.4', '1582.5', '-0.4' , '-1.5', ],
]
''' 


'''
